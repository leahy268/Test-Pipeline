name: CICD Pipeline - PP to Prod
on:
  schedule:
    # Su 10pm Canberra time (AEST) = Su 12pm (UTC)
    # https://crontab.guru/#0_12_*_*_0
    - cron: '*/5 * * * *'

  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:

  # job to dowload and republish artifacts from last successful workflow
  republish-artifacts:
    name: Get last good test build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        run: echo "Download Artifacts"
        shell: bash
        
      - name: Upload artifacts
        run: echo "Upload Artifacts"
        shell: bash
        

# -----------------------------------------------------------------------------

  publish_release:
    runs-on: ubuntu-latest
    concurrency:
      group: publish-release
      cancel-in-progress: false
    steps:
    - name: artifact Upload
      run: echo "Upload Artifacts"
      shell: bash
     
    needs: 
      - republish-artifacts
      
# -----------------------------------------------------------------------------

  pp-approval:
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    environment: "pp-approval"
    outputs:
      approved: ${{steps.pp-approval.outputs.approved }}
    concurrency:
      cancel-in-progress: true
      group: pp-approval
    steps:
      - name: approved
        id: pp-approval
        run: |
          echo "approved for pp"
          echo "approved=true" >> $GITHUB_OUTPUT
        shell: bash
    needs:
      - republish-artifacts
      

  pp-contract-test:
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: false
      group: pp-contract-test
    # since we have an optional approval gate, shortcut the 'needs' of this job using !failed() && !cancelled()
    # if the approval gate was not required for this run, then we still want to run this step if the approval gate was skipped
    # if the approval gate was required for this run, then only run this job if the approval was completed successfully
    # unfortunately, we have to apply this to each step below since approval-gate above was skipped and by default GitHub intelligence
    #   the skip status will cascade to all steps below that don't have always and automatically skip them as well
    if: ${{ (!failure() && !cancelled()) && ( needs.pp-approval.outputs.approved == 'true' || needs.approval-gate.result == 'skipped')}}
    steps:
      - name: artifact Upload
        run: echo "Upload Artifacts"
        shell: bash
         
    needs:
      - republish-artifacts
      - pp-approval
# -----------------------------------------------------------------------------

  pp-deploy:
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: false
      group: pp-deploy
    # since we have an optional approval gate, shortcut the 'needs' of this job using !failed() && !cancelled()
    # if the approval gate was not required for this run, then we still want to run this step if the approval gate was skipped
    # if the approval gate was required for this run, then only run this job if the approval was completed successfully
    # unfortunately, we have to apply this to each step below since approval-gate above was skipped and by default GitHub intelligence
    #   the skip status will cascade to all steps below that don't have always and automatically skip them as well
    if: ${{ (!failure() && !cancelled()) && ( needs.pp-approval.outputs.approved == 'true' || needs.approval-gate.result == 'skipped')}}
    
    steps:
    - name: artifact Upload
      run: echo "Deploying"
      shell: bash
    
    needs:
      - pp-contract-test
      - pp-approval

# -----------------------------------------------------------------------------

  prod-approval:
    runs-on: ubuntu-latest
    environment: "prod-approval"
    concurrency:
      cancel-in-progress: true
      group: prod-approval
    # since we have an optional approval gate, shortcut the 'needs' of this job using !failed() && !cancelled()
    # if the approval gate was not required for this run, then we still want to run this step if the approval gate was skipped
    # if the approval gate was required for this run, then only run this job if the approval was completed successfully
    # unfortunately, we have to apply this to each step below since approval-gate above was skipped and by default GitHub intelligence
    #   the skip status will cascade to all steps below that don't have always and automatically skip them as well
    if: ${{ (!failure() && !cancelled()) && ( needs.pp-approval.outputs.approved == 'true' || needs.approval-gate.result == 'skipped')}}
    steps:
      - name: approved
        run: |
          Write-Output "approved for prod"
    needs:
      - pp-deploy
      - pp-approval
  
  prod-contract-test:
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: false
      group: prod-contract-test
    # since we have an optional approval gate, shortcut the 'needs' of this job using !failed() && !cancelled()
    # if the approval gate was not required for this run, then we still want to run this step if the approval gate was skipped
    # if the approval gate was required for this run, then only run this job if the approval was completed successfully
    # unfortunately, we have to apply this to each step below since approval-gate above was skipped and by default GitHub intelligence
    #   the skip status will cascade to all steps below that don't have always and automatically skip them as well
    if: ${{ (!failure() && !cancelled()) && ( needs.pp-approval.outputs.approved == 'true' || needs.approval-gate.result == 'skipped')}}
    steps:
    - name: artifact Upload
      run: echo "Deploying"
      shell: bash
        
    needs: 
      - pp-deploy
      - prod-approval
# -----------------------------------------------------------------------------

  prod-deploy:
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: false
      group: prod-deploy
    # since we have an optional approval gate, shortcut the 'needs' of this job using !failed() && !cancelled()
    # if the approval gate was not required for this run, then we still want to run this step if the approval gate was skipped
    # if the approval gate was required for this run, then only run this job if the approval was completed successfully
    # unfortunately, we have to apply this to each step below since approval-gate above was skipped and by default GitHub intelligence
    #   the skip status will cascade to all steps below that don't have always and automatically skip them as well
    if: ${{ (!failure() && !cancelled()) && ( needs.pp-approval.outputs.approved == 'true' || needs.approval-gate.result == 'skipped')}}

    steps:
    - name: artifact Upload
      run: echo "Deploying"
      shell: bash
    needs:
      - prod-approval
      - prod-contract-test
